#! /bin/bash

. ./utils
rapport_head
unset GREP_OPTIONS

sep() {
    head -c $1 < /dev/zero | tr '\0' $2
    echo
}

to_test='*.test'
res() {
    if [ "x$-" = "x" ]; then
        echo -e "\r[$2"
    else
        echo -e "\r[`tput setaf $1`$2`tput init`"
    fi
}
full_res() {
    if [ "x$-" = "x" ]; then
        echo -e "\r[$2] $3"
    else
        echo -e "\r[`tput setaf $1`$2`tput init`] $3"
    fi
}
for i in $to_test; do
    echo -n "[ .. ] $i"
    exit_status=$(./$i) #> $i.log 2>&1
    if [ "x$exit_status" != "x0" ]; then
        if [ "x$exit_status" = "x77" ]; then
            res 3 skip
        else
            if [ "x$exit_status" = "x99" ]; then
                full_res 1 "epic fail" "$i"
            else
                res 1 fail
            fi
        fi
    else
        res 2 " ok"
    fi
done

rapport_tail

echo Here a summary of the failed tests:

sep 80 =
grep -E '^\*\* FAIL' sum.org | sed -e 's#^\*\* FAIL =\(.*\)=#\1#' | nl
sep 80 =

nb=`grep -E '^\*\* ' sum.org | wc -l`
pass=`grep -E '^\*\* PASS' sum.org | wc -l`
fail=`grep -E '^\*\* FAIL' sum.org | wc -l`

echo $pass/$nb tests pass.

if [ "x$fail" != "x0" ]; then
    echo `tput setaf 1`$fail`tput init` tests has failed.
fi

emacs=emacs23
if which $emacs > /dev/null; then
    echo Make html report
    $emacs --batch --visit "sum.org" --funcall org-export-as-html > /dev/null 2>&1
    echo Make pdf report
    $emacs --batch --visit "sum.org" --funcall org-export-as-pdf > /dev/null 2>&1
else
    echo Emacs not present on the system, will not generate html/pdf report.
fi

if [ "x$fail" != "x0" ]; then
    exit 1
else
    exit 0
fi
